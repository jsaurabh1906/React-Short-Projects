//variables
$primary-color: #4a6ee0;
$primary-hover: #3d5bbf;
$border-radius: 0.5rem;
$box-shadow: 0 4px 15px rgba(171, 110, 100, 0.2);

//1. colors
$colors: (
  // bgcolor: #36454f,
  bgcolor: #fedbd5,
  primary: $primary-color,
  primary-hover: $primary-hover,
  // textColor: #c8f1fd,
  textColor: rgb(171, 110, 100)
);

//2. font-sizes
$font-sizes: (
  small: 0.75rem,
  medium: 1rem,
  large: 1.25rem,
  xl: 1.5rem,
  xxl: 2rem,
);

//mixins
@mixin flex-center($direction: row, $gap: 0) {
  display: flex;
  flex-direction: $direction;
  justify-content: center;
  align-items: center;
  gap: $gap;
}

@mixin button-styles {
  background-color: map-get($colors, textColor);
  color: white;
  border: 1px solid map-get($map: $colors, $key: textColor);
  border-radius: $border-radius;
  font-size: map-get($font-sizes, medium);
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.3s ease-in-out;

  &:hover {
    background-color: darken(#ab6e64, 10);
  }

  &:active {
    transform: translateY(2px);
  }
}

//functions
.password-generator {
  max-width: 32rem;
  margin: map-get($map: $font-sizes, $key: xl) auto;
  padding: map-get($map: $font-sizes, $key: xl);
  background-color: map-get($map: $colors, $key: bgcolor);
  border-radius: $border-radius;
  box-shadow: $box-shadow;
  font-family: Cambria, Cochin, Georgia, Times, "Times New Roman", serif;

  h1 {
    text-align: center;
    color: map-get($map: $colors, $key: textColor);
    font-size: map-get($map: $font-sizes, $key: xl);
    font-weight: 700;
  }

  .password-display {
    @include flex-center(row);
    margin: map-get($font-sizes, medium) 0;

    input {
      flex: 1;
      padding: map-get($font-sizes, small);
      font-size: map-get($font-sizes, medium);
      border: 1px solid map-get($map: $colors, $key: textColor);
      border-radius: 0.4rem 0 0 0.4rem;
      background-color: white;
      color: map-get($map: $colors, $key: textColor);
      outline-color: #ab6e64;
    }

    .copy-button {
      @include button-styles;
      border-radius: 0 0.4rem 0.4rem 0;
      padding: 0.75rem 1.5rem;
    }
  }

  .strength-meter {
    @include flex-center(row, 0.5rem);
    align-items: center;
    margin-bottom: map-get($map: $font-sizes, $key: xl);

    span {
      font-weight: bold;
      color: darken(
        $color: map-get($map: $colors, $key: textColor),
        $amount: 10
      );
    }
    .strength-indicator {
      @include flex-center(row, 0.3rem);
      margin-right: 0.5rem;

      .strength-bar {
        width: 3rem;
        height: 0.75rem;
        background-color: #facaca;
        border-radius: 0.4rem;
      }

      &.weak .strength-bar:nth-child(1) {
        background-color: #fc5656;
      }
      &.medium .strength-bar:nth-child(1),
      &.medium .strength-bar:nth-child(2) {
        background-color: #fcb634;
      }
      &.strong .strength-bar {
        background-color: #62f862;
      }
    }
  }

  .options {
    background-color: #fdd3d3;
    padding: map-get($map: $font-sizes, $key: xl);
    margin-bottom: map-get($map: $font-sizes, $key: xl);
    border-radius: $border-radius;
    box-shadow: $box-shadow;

    .length-option {
      margin-bottom: map-get($map: $font-sizes, $key: xl);

      .option-header {
        @include flex-center(row, 1rem);
        justify-content: space-between;
        margin-bottom: map-get($map: $font-sizes, $key: 0.5rem);

        label {
          font-weight: bold;
          color: map-get($map: $colors, $key: textColor);
        }
        span {
          color: map-get($map: $colors, $key: textColor);
          font-weight: bold;
        }
      }
      input[type="range"] {
        width: 100%;
        height: 0.5rem;
        -webkit-appearance: none;
        appearance: none;
        background: #f7c3c3;
        border-radius: 0.4rem;
        outline: none;

        &::-webkit-slider-runnable-track {
          width: 100%;
          height: 0.5rem;
          background: linear-gradient(
            to right,
            map-get($colors, textColor) 0%,
            map-get($colors, textColor) var(--progress-value, 50%),
            #ddd var(--progress-value, 50%),
            #ddd 100%
          );
          border-radius: 0.4rem;
        }
        &::-moz-range-track {
          background: map-get($map: $colors, $key: textColor);
          height: 0.5rem;
          border-radius: 0.4rem;
        }

        &::-webkit-slider-thumb {
          -webkit-appearance: none;
          appearance: none;
          width: 1rem;
          height: 1rem;
          border-radius: 50%;
          background: map-get($colors, textColor);
          cursor: pointer;
          margin-top: -0.25rem;
        }
      }
    }

    .checkbox-options {
      display: grid;
      gap: map-get($map: $font-sizes, $key: medium);

      .checkbox-option {
        @include flex-center(row, 0.75rem);
        justify-content: start;
        align-items: center;

        input[type="checkbox"] {
          width: 1.125rem;
          height: 1.125rem;
          accent-color: map-get($colors, textColor);
        }
        label {
          color: map-get($colors, textColor);
        }
      }
    }
  }
  .generate-button {
    @include button-styles;
    width: 100%;
    padding: 0.75rem;
    font-size: map-get($font-sizes, medium);
  }
}

// Responsive adjustments
@media (max-width: 480px) {
  .password-generator {
    padding: 1.5rem;

    .strength-meter {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }

    .checkbox-options {
      grid-template-columns: 1fr;
    }
  }
}
